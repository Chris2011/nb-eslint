package se.jocke.nb.eslint.options;

import java.io.File;
import java.nio.file.Paths;
import java.util.List;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import org.openide.awt.StatusDisplayer;
import org.openide.util.NbBundle;
import org.openide.util.NbPreferences;
import se.jocke.nb.eslint.Constants;
import se.jocke.nb.eslint.ESLint;

final class ESLintPanel extends javax.swing.JPanel {

    private final ESLintOptionsPanelController controller;

    ESLintPanel(ESLintOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        eslintPathTextField = new javax.swing.JTextField();
        BrowseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        confTextField = new javax.swing.JTextField();
        browseConfButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPathValue = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        descriptionLabel = new javax.swing.JLabel();

        fileChooser.setDialogTitle(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.fileChooser.dialogTitle")); // NOI18N
        fileChooser.setFileFilter(null);
        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.jLabel1.text")); // NOI18N

        eslintPathTextField.setText(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.eslintPathTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(BrowseButton, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.BrowseButton.text")); // NOI18N
        BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.jLabel2.text")); // NOI18N

        confTextField.setText(org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.confTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseConfButton, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.browseConfButton.text")); // NOI18N
        browseConfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseConfButtonActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.jLabel4.text")); // NOI18N
        jLabel4.setOpaque(true);

        org.openide.awt.Mnemonics.setLocalizedText(searchButton, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.searchButton.text")); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(descriptionLabel, org.openide.util.NbBundle.getMessage(ESLintPanel.class, "ESLintPanel.descriptionLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPathValue)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(descriptionLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eslintPathTextField)
                                    .addComponent(confTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(browseConfButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eslintPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrowseButton)
                    .addComponent(searchButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseConfButton)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(txtPathValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            eslintPathTextField.setText(fileChooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_BrowseButtonActionPerformed

    private void browseConfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseConfButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            confTextField.setText(fileChooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_browseConfButtonActionPerformed

    @NbBundle.Messages("ESLintOptionsPanel.executable.notFound=No ESLint executable found.")
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        List<String> ngCliPaths = FileUtils.findFileOnUsersPath(ESLint.ESLINT_CLI_NAME);

        if (ngCliPaths.isEmpty()) {
            StatusDisplayer.getDefault().setStatusText(Bundle.ESLintOptionsPanel_executable_notFound());
        } else {
            eslintPathTextField.setText(ngCliPaths.get(0));
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    void load() {
        Preferences prefs = NbPreferences.forModule(ESLint.class);
        eslintPathTextField.setText(prefs.get(Constants.ESLINT_PATH, null));
        confTextField.setText(prefs.get(Constants.ESLINT_CONF, Paths.get(System.getProperty("user.home"), ".eslintrc").toString()));
        txtPathValue.setText(prefs.get(Constants.PATH_ENV_VAR, null));
    }

    void store() {
        NbPreferences.forModule(ESLint.class).put(Constants.ESLINT_PATH, eslintPathTextField.getText());
        NbPreferences.forModule(ESLint.class).put(Constants.ESLINT_CONF, confTextField.getText());
        NbPreferences.forModule(ESLint.class).put(Constants.PATH_ENV_VAR, txtPathValue.getText());
    }

    boolean valid() {
        File exec;
        try {
            exec = new File(eslintPathTextField.getText());
        } catch (Exception e) {
            return false;
        }
        return exec.exists() && exec.canExecute();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrowseButton;
    private javax.swing.JButton browseConfButton;
    private javax.swing.JTextField confTextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField eslintPathTextField;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField txtPathValue;
    // End of variables declaration//GEN-END:variables
}
